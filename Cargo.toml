[package]
name = "databento"
authors = ["Databento <support@databento.com>"]
version = "0.2.1"
edition = "2021"
repository = "https://github.com/databento/databento-rs"
description = "Official Databento client library"
license = "Apache-2.0"
# maximum of 5
keywords = ["real-time", "historical", "market-data", "trading", "tick-data"]
# see https://crates.io/category_slugs
categories = ["api-bindings", "finance"]

[package.metadata.docs.rs]
# Document all features on docs.rs
all-features = true
# To build locally: `RUSTDOCFLAGS="--cfg docsrs" cargo +nightly doc --all-features --open`
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["historical", "live"]
historical = ["dep:futures", "dep:reqwest", "dep:serde", "dep:tokio-util", "dep:serde_json", "tokio/fs"]
live = ["dep:hex", "dep:sha2", "tokio/net"]

[dependencies]
# binary encoding
dbn = { version = "0.9.0", features = ["async", "serde"] }
# Async stream trait
futures = { version = "0.3", optional = true }
# Hex encoding used for Live authentication
hex = { version = "0.4", optional = true }
# Logging
log = "0.4"
# HTTP client for historical API
reqwest = { version = "0.11", optional = true, features = ["json", "stream"] }
# JSON deserialization for historical API
serde = { version = "1.0", optional = true, features = ["derive"] }
serde_json = { version = "1.0", optional = true }
# Used for Live authentication
sha2 = { version = "0.10", optional = true }
# Error handling
thiserror = "1.0.40"
# Dates and datetimes
time = { version = "0.3", features = ["macros", "parsing", "serde"] }
# Async run time
tokio = { version = "1.27", features = ["io-util", "macros"] }
# Stream utils
tokio-util = { version = "0.7.8", features = ["io"], optional = true }
# Builders for method parameters
typed-builder = { version = "0.14" }

[dev-dependencies]
# Enable all features
tokio = { version = "1.27", features = ["full"] }
# HTTP client testing
wiremock = "0.5.19"
